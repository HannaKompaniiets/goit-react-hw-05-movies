{"version":3,"file":"static/js/761.13c06085.chunk.js","mappings":"qLACA,EAAyB,uB,SCkBzB,EAhBe,WACb,OACE,iBAAKA,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,mBACb,MAIP,C,kFChBD,EAA2B,0BAA3B,EAA+D,yBAA/D,EAAsG,6B,qEC0BtG,EAvB6B,WAC3B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAkBJ,GAFpB,OAEXK,EAFW,OAGjBV,EAAWU,EAAKC,SAHC,gDAKjBT,EAAS,KAAMU,SALE,yBAOjBR,GAAa,GAPI,4EAAH,qDAUlBI,GACD,GAAE,CAACH,IACG,CAAEN,QAAAA,EAASE,MAAAA,EAAOE,UAAAA,EAC1B,E,SCGD,EAxBgB,WACd,MAAsCU,IAA9Bd,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAOE,EAAxB,EAAwBA,UAExB,OACE,2BACGA,IAAa,SAACW,EAAA,EAAD,IACbb,IAAS,yBAAK,kBACf,4BACE,eAAIX,UAAWC,EAAf,SAA6B,eAC7B,eAAID,UAAWC,EAAf,SACGQ,EAAQgB,OAAS,EACdhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,gBAAI7B,UAAWC,EAAf,WACE,wBAAK0B,KACL,cAAG3B,UAAWC,EAAd,SAAgC2B,MAFGC,EAD3B,IAMZ,wDAKb,C,mMCxBKC,EAAU,mCACVC,EAAM,+BAECC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACgBD,EADhB,oBADQ,uBACvBV,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBc,EAAU,mCAAG,WAAMC,GAAN,yFACDF,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA0BI,EAA1B,oBAA0CL,IADzC,uBAChBV,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVD,EAAiB,mCAAG,WAAMiB,GAAN,yFACRH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLK,EADK,4BACuBN,IAFf,uBACvBV,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBiB,EAAc,mCAAG,WAAMD,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLK,EADK,4BACuBN,IAFlB,uBACpBV,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdkB,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACUD,EADV,kBAC2BS,IAFnB,uBACvBnB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","hooks/useFetchMovieReviews.js","components/Reviews/Reviews.jsx","services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { Blocks } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n      ;\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"revTitle\":\"Reviews_revTitle__M8A-9\",\"revList\":\"Reviews_revList__ljZve\",\"revListItem\":\"Reviews_revListItem__NQgzp\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetch';\n\nconst useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return { reviews, error, isLoading };\n};\n\nexport default useFetchMovieReviews;\n","import Loader from 'components/Loader/Loader';\nimport css from './Reviews.module.css';\nimport useFetchMovieReviews from 'hooks/useFetchMovieReviews';\n\nconst Reviews = () => {\n  const { reviews, error, isLoading } = useFetchMovieReviews();\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <div>Sorry, error</div>}\n      <div>\n        <h3 className={css.revTitle}>Reviews: </h3>\n        <ul className={css.revList}>\n          {reviews.length > 0\n            ? reviews.map(({ author, content, id }) => (\n                <li className={css.revListItem} key={id}>\n                  <h3>{author}</h3>\n                  <p className={css.revListItem}>{content}</p>\n                </li>\n              ))\n            : \"Sorry, we don't have any review for this movie\"}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '314821462cf957217439db4fd7a420c5';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovie = async name => {\n  const { data } = await axios.get(`${URL}/movie/${name}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","fetchMovieReviews","data","results","message","useFetchMovieReviews","Loader","length","map","author","content","id","API_KEY","URL","getTrendingMovies","axios","fetchMovie","name","movie_id","fetchMovieCast","fetchMovieByQuery","query"],"sourceRoot":""}