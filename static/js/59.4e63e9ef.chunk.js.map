{"version":3,"file":"static/js/59.4e63e9ef.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesDetails/MovieDetails.module.css?1850","hooks/useFetchMovieDetailes.js","pages/MoviesDetails/MoviesDetails.jsx","services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"Loader_Loader__wqo9C\"};","import { Blocks } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.Loader}>\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n      ;\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainMovieDetails\":\"MovieDetails_mainMovieDetails__WKeG3\",\"movieDescription\":\"MovieDetails_movieDescription__5iWVh\",\"movieTitle\":\"MovieDetails_movieTitle__aFVJA\",\"genres\":\"MovieDetails_genres__S5am5\",\"linksList\":\"MovieDetails_linksList__h-eoN\",\"links\":\"MovieDetails_links__w5tJX\",\"backLink\":\"MovieDetails_backLink__CzOZg\",\"adInfo\":\"MovieDetails_adInfo__9lGox\"};","import { useState, useEffect } from 'react';\nimport { fetchMovie } from 'services/fetch';\nimport { useParams } from 'react-router-dom';\n\nconst useFetchMovieDetailes = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchDataMovie = async () => {\n      try {\n        const data = await fetchMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDataMovie(movieId);\n  }, [movieId]);\n\n  return { movie, error, isLoading };\n};\n\nexport default useFetchMovieDetailes;\n","import Loader from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { React, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport useFetchMovieDetailes from 'hooks/useFetchMovieDetailes';\n\nconst MoviesDetails = () => {\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const { movie, error, isLoading } = useFetchMovieDetailes();\n\n  const { original_title, title, name, overview, poster_path, genres } = movie;\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <div>Sorry, error</div>}\n      <div className={css.mainMovieDetails}>\n        <Link className={css.backLink} to={backLink.current}>\n          Go BACK\n        </Link>\n        <div className={css.movieDescription}>\n          <img\n            style={{ width: 300 }}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://th.bing.com/th/id/R.1a12b4c6a85c3d3d0356b8b0982e3038?rik=%2bN8VUyxPhKxwsA&riu=http%3a%2f%2fvignette3.wikia.nocookie.net%2flego%2fimages%2fa%2fac%2fNo-Image-Basic.png%2frevision%2flatest%3fcb%3d20130819001030&ehk=4LPMn2YupbS2wKmWBvjF5%2bFz434RztzcY3x7Pg99GBI%3d&risl=&pid=ImgRaw&r=0'\n            }\n            alt={title || name || original_title}\n          />\n          <div className={css.movieDescriptionText}>\n            <h2 className={css.movieTitle}>\n              {title || name || original_title}\n            </h2>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul className={css.genres}>\n              {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className={css.adInfo}>\n        <h3>Additional information</h3>\n        <ul className={css.linksList}>\n          <Link className={css.links} to=\"cast\">\n            <div>Cast</div>\n          </Link>\n          <Link className={css.links} to={'reviews'}>\n            <div>Review</div>\n          </Link>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = '314821462cf957217439db4fd7a420c5';\nconst URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovie = async name => {\n  const { data } = await axios.get(`${URL}/movie/${name}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["className","css","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","useState","movie","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchDataMovie","fetchMovie","data","message","location","useLocation","backLink","useRef","state","from","useFetchMovieDetailes","original_title","title","name","overview","poster_path","genres","Loader","to","current","style","src","alt","map","id","Suspense","fallback","API_KEY","URL","getTrendingMovies","axios","fetchMovieReviews","movie_id","fetchMovieCast","fetchMovieByQuery","query"],"sourceRoot":""}